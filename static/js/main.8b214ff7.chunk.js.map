{"version":3,"sources":["facial-recognition/index.ts","facial-recognition/common/triangulation.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Eevents","TRIANGULATION","FaceDetector","context","config","_output_render_context","_video","_stream","MediaStream","_is_scanning","_anim_id","_callbacks","model","_interval_id","keypoints","NUM_KEYPOINTS","NUM_IRIS_KEYPOINTS","palette","FACE","IRIS","_image_metadata","this","document","createElement","cover_ratio","top_left","x","y","fillStyle","fillRect","canvas","width","height","a","b","Math","sqrt","pow","points","closePath","region","Path2D","moveTo","i","length","point","lineTo","stroke","estimateFaces","input","returnTensors","flipHorizontal","predictIrises","predictions","scaledMesh","window","setTimeout","_read","bind","clearTimeout","original_ratios","videoWidth","videoHeight","max","new_image_width","new_image_height","drawImage","strokeStyle","lineWidth","map","index","drawPath","leftCenter","leftDiameterY","distance","leftDiameterX","beginPath","ellipse","PI","rightCenter","rightDiameterY","rightDiameterX","requestAnimationFrame","_render","cancelAnimationFrame","text","lineHeight","maxWidth","getBoundingClientRect","words","split","line","font","textAlign","n","testLine","measureText","fillText","Promise","resolve","reject","navigator","mediaDevices","getUserMedia","video","ideal","facingMode","frameRate","srcObject","play","tf","faceLandmarksDetection","mediapipeFacemesh","shouldLoadIrisModel","detectionConfidence","maxFaces","iouThreshold","error","Error","print","pause","src","getTracks","forEach","track","stop","App","face_detector","getElementById","getContext","detect","className","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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pE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IACvE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,IACxE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GACxE,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IACvE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IACpE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,EAAG,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IACrE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IACxE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GACrE,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GACrE,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GACxE,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,I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AAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IACrE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IACrE,IAAK,GAAI,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IACrE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IACxE,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IACvE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IACxE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,O,SD7KhED,O,iBAAAA,I,kBAAAA,M,KAyBE,IAAME,EAAb,WAmBI,WAAYC,EAAoCC,GAAmB,yBAlB3DC,4BAkB0D,OAjB1DC,YAiB0D,OAhB1DC,QAAwB,IAAIC,YAgB8B,KAf1DC,cAAyB,EAeiC,KAd1DC,SAAoB,EAcsC,KAbxDC,WAA0B,GAa8B,KAZ1DC,WAY0D,OAX1DC,aAAwB,EAWkC,KAV1DC,eAU0D,OAT1DV,OAAmB,CACvBW,cAAe,IACfC,mBAAoB,EACpBC,QAAS,CACLC,KAAM,UACNC,KAAM,YAIoD,KAD1DC,qBAC0D,EAC9DC,KAAKhB,uBAAyBF,EAC9BkB,KAAKf,OAASgB,SAASC,cAAc,SACjCnB,IACAiB,KAAKjB,OAAL,2BACOiB,KAAKjB,QACLA,IAIXiB,KAAKP,UAAY,CAAC,CAAC,IAEnBO,KAAKD,gBAAkB,CACnBI,YAAa,EACbC,SAAU,CACNC,EAAG,EACHC,EAAG,IAIXN,KAAKhB,uBAAuBuB,UAAY,QACxCP,KAAKhB,uBAAuBwB,SAAS,EAAG,EAAGR,KAAKhB,uBAAuByB,OAAOC,MAAOV,KAAKhB,uBAAuByB,OAAOE,QAxChI,4CA2CI,SAAiBC,EAAcC,GAC3B,OAAOC,KAAKC,KAAKD,KAAKE,IAAIJ,EAAE,GAAKC,EAAE,GAAI,GAAKC,KAAKE,IAAIJ,EAAE,GAAKC,EAAE,GAAI,MA5C1E,sBA+CI,SAAiBI,EAAqBC,GAClC,IAAMC,EAAkB,IAAIC,OAC5BD,EAAOE,OACFJ,EAAO,GAAG,GAAKjB,KAAKD,gBAAgBI,YAAeH,KAAKD,gBAAgBK,SAASC,GACjFY,EAAO,GAAG,GAAKjB,KAAKD,gBAAgBK,SAASE,GAAKN,KAAKD,gBAAgBI,aAE5E,IAAK,IAAImB,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,IAAK,CACpC,IAAME,EAAQP,EAAOK,GACrBH,EAAOM,OACFD,EAAM,GAAKxB,KAAKD,gBAAgBI,YAAeH,KAAKD,gBAAgBK,SAASC,GAC7EmB,EAAM,GAAIxB,KAAKD,gBAAgBK,SAASE,GAAKN,KAAKD,gBAAgBI,aAGvEe,GACAC,EAAOD,YAEXlB,KAAKhB,uBAAuB0C,OAAOP,KA/D3C,0DAkEI,gHAI8BnB,KAAKT,aAJnC,aAI8B,EAAYoC,cAAc,CAChDC,MAAO5B,KAAKf,OACZ4C,eAAe,EACfC,gBAAgB,EAChBC,eAAe,IARvB,QAIUC,EAJV,SAYuBA,EAAYT,OAAS,IACpCvB,KAAKP,UAAYuC,EAAY,GAAGC,YAGhCjC,KAAKZ,aACLY,KAAKR,aAAe0C,OAAOC,WAAWnC,KAAKoC,MAAMC,KAAKrC,MAAO,IAE7DsC,aAAatC,KAAKR,cAnB1B,gDAlEJ,kHAyFI,qHAgCI,GA9BI+C,EAAkB,CAClB7B,MAAOV,KAAKhB,uBAAuByB,OAAOC,MAAQV,KAAKf,OAAOuD,WAC9D7B,OAAQX,KAAKhB,uBAAuByB,OAAOE,OAASX,KAAKf,OAAOwD,aAIhEtC,EAAcW,KAAK4B,IAAIH,EAAgB7B,MAAO6B,EAAgB5B,QAG9DgC,EAAkB3C,KAAKf,OAAOuD,WAAarC,EAC3CyC,EAAmB5C,KAAKf,OAAOwD,YAActC,EAG7CE,EAAKL,KAAKhB,uBAAuByB,OAAOC,MAAQ,EAAMV,KAAKf,OAAOuD,WAAa,EAAKrC,EACpFG,EAAKN,KAAKhB,uBAAuByB,OAAOE,OAAS,EAAMX,KAAKf,OAAOwD,YAAc,EAAKtC,EAE1FH,KAAKD,gBAAkB,CACnBI,YAAaA,EACbC,SAAU,CACNC,EAAGA,EACHC,EAAGA,IAKXN,KAAKhB,uBAAuB6D,UAAU7C,KAAKf,OAAQoB,EAAGC,EAAGqC,EAAiBC,GAE1E5C,KAAKhB,uBAAuB8D,YAAc9C,KAAKjB,OAAOa,QAAQC,KAC9DG,KAAKhB,uBAAuB+D,UAAY,GAEpC/C,KAAKP,UAAU8B,OAAS,EAAG,CAE3B,IAASD,EAAI,EAAGA,EAAI1C,EAAc2C,OAAS,EAAGD,IACpCL,EAAS,CACXrC,EAAkB,EAAJ0C,GAAQ1C,EAAkB,EAAJ0C,EAAQ,GAC5C1C,EAAkB,EAAJ0C,EAAQ,IACxB0B,KAAI,SAAAC,GAAK,OAAI,EAAKxD,UAAUwD,MAC9BjD,KAAKkD,SAASjC,GAAQ,GAIvBjB,KAAKP,UAAU8B,OAASvB,KAAKjB,OAAOW,gBACnCM,KAAKhB,uBAAuB8D,YAAc9C,KAAKjB,OAAOa,QAAQE,KAC9DE,KAAKhB,uBAAuB+D,UAAY,EAElCI,EAAanD,KAAKP,UAAUO,KAAKjB,OAAOW,eACxC0D,EAAgBpD,KAAKqD,SACvBrD,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgB,GAC3CM,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgB,IACzC4D,EAAgBtD,KAAKqD,SACvBrD,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgB,GAC3CM,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgB,IAE/CM,KAAKhB,uBAAuBuE,YAC5BvD,KAAKhB,uBAAuBwE,QACvBL,EAAW,GAAKnD,KAAKD,gBAAgBI,YAAeH,KAAKD,gBAAgBK,SAASC,GAClF8C,EAAW,GAAKnD,KAAKD,gBAAgBK,SAASE,GAAKN,KAAKD,gBAAgBI,YACzEmD,EAAgB,EAAGF,EAAgB,EAAG,EAAG,EAAG,EAAItC,KAAK2C,IAEzDzD,KAAKhB,uBAAuB0C,SAEzB1B,KAAKP,UAAU8B,OAASvB,KAAKjB,OAAOW,cAAgBM,KAAKjB,OAAOY,qBACzD+D,EAAc1D,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgBM,KAAKjB,OAAOY,oBACrEgE,EAAiB3D,KAAKqD,SAC5BrD,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgBM,KAAKjB,OAAOY,mBAAqB,GAC5EK,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgBM,KAAKjB,OAAOY,mBAAqB,IACtEiE,EAAiB5D,KAAKqD,SAC5BrD,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgBM,KAAKjB,OAAOY,mBAAqB,GAC5EK,KAAKP,UAAUO,KAAKjB,OAAOW,cAAgBM,KAAKjB,OAAOY,mBAAqB,IAE5EK,KAAKhB,uBAAuBuE,YAC5BvD,KAAKhB,uBAAuBwE,QACvBE,EAAY,GAAK1D,KAAKD,gBAAgBI,YAAeH,KAAKD,gBAAgBK,SAASC,GACnFqD,EAAY,GAAK1D,KAAKD,gBAAgBK,SAASE,GAAKN,KAAKD,gBAAgBI,YAAayD,EAAiB,EACxGD,EAAiB,EAAG,EAAG,EAAG,EAAI7C,KAAK2C,IAEvCzD,KAAKhB,uBAAuB0C,WAMpC1B,KAAKZ,aACLY,KAAKX,SAAW6C,OAAO2B,sBAAsB7D,KAAK8D,QAAQzB,KAAKrC,OAE/DkC,OAAO6B,qBAAqB/D,KAAKX,UAvFzC,iDAzFJ,yEAqLI,SAAa2E,EAAe3D,EAAYC,EAAY2D,GAChD,IAAMC,EAAoBlE,KAAKhB,uBAAuByB,OAAO0D,wBAAwBzD,MACjF0D,EAAmBJ,EAAKK,MAAM,KAC9BC,EAAgB,GAGpBtE,KAAKhB,uBAAuBuF,KAAO,aACnCvE,KAAKhB,uBAAuBuB,UAAY,QACxCP,KAAKhB,uBAAuBwF,UAAY,SAExC,IAAI,IAAIC,EAAI,EAAGA,EAAIL,EAAM7C,OAAQkD,IAAK,CACpC,IAAIC,EAAoBJ,EAAOF,EAAMK,GAAK,IACdzE,KAAKhB,uBAAuB2F,YAAYD,GACnChE,MACjBwD,GAAYO,EAAI,GAC9BzE,KAAKhB,uBAAuB4F,SAASN,EAAMjE,EAAGC,GAC9CgE,EAAOF,EAAMK,GAAK,IAClBnE,GAAK2D,GAGLK,EAAOI,EAGX1E,KAAKhB,uBAAuB4F,SAASN,EAAMjE,EAAGC,KA5MtD,oBA+MI,WAAiC,IAAD,OAC5B,OAAO,IAAIuE,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,mBAAAnE,EAAA,0DACXoE,UAAUC,eAAgBD,UAAUC,aAAaC,aADtC,6BAGF,EAAK9F,aAHH,iCAIkB4F,UAAUC,aAAaC,aAAa,CACrDC,MAAO,CACHzE,MAAO,CACH0E,MAAO,EAAKpG,uBAAuByB,OAAOC,OAE9CC,OAAQ,CACJyE,MAAO,EAAKpG,uBAAuByB,OAAOE,QAE9C0E,WAAY,OACZC,UAAW,CACPF,MAAO,OAdhB,cAIH,EAAKlG,QAJF,OAmBH,EAAKD,OAAOsG,UAAY,EAAKrG,QAC7B,YAAKD,cAAL,SAAauG,OAEb,EAAKpG,cAAe,EAEpB,EAAK0E,UAxBF,UA2BG2B,KAAc,SA3BjB,yBA6BgBC,IACfA,IAAyCC,kBACzC,CACIC,qBAAqB,EACrBC,oBAAqB,EACrBC,SAAU,EACVC,aAAc,IAnCnB,QA6BH,EAAKxG,MA7BF,OAwCH,EAAK6C,QAEL0C,IA1CG,wBA6CGkB,EAAgB,IAAIC,MAAM,+BAC5B,EAAK3G,WAAW0G,OAChB,EAAK1G,WAAW0G,MAAMA,GAG1BjB,EAAOiB,GAlDJ,0DAqDH,EAAK1G,WAAW0G,OAChB,EAAK1G,WAAW0G,MAAhB,MAIJ,EAAKE,MAAM,gFAAiF,EAAKlH,uBAAuByB,OAAOC,MAAQ,EAAG,EAAK1B,uBAAuByB,OAAOE,OAAS,EAAG,IAEzLoE,EAAO,EAAD,IA5DC,gCAgELiB,EAAgB,IAAIC,MAAM,0CAC5B,EAAK3G,WAAW0G,OAChB,EAAK1G,WAAW0G,MAAMA,GAI1B,EAAKE,MAAM,mGAAoG,EAAKlH,uBAAuByB,OAAOC,MAAQ,EAAG,EAAK1B,uBAAuByB,OAAOE,OAAS,EAAG,IAE5MoE,EAAOiB,GAxEI,0DAAZ,2DAhNf,kBA6RI,WAAkC,IAAD,OAC7B,OAAO,IAAInB,SAAQ,SAACC,EAASC,GACrB,EAAK7F,SAEL,EAAKE,cAAe,EAEpB,EAAKH,OAAOkH,QACZ,EAAKlH,OAAOmH,IAAM,GAClB,EAAKlH,QAAQmH,YAAYC,SAAQ,SAASC,GACtCA,EAAMC,UAIV,EAAKxH,uBAAuBuB,UAAY,QACxC,EAAKvB,uBAAuBwB,SAAS,EAAG,EAAG,EAAKxB,uBAAuByB,OAAOC,MAAO,EAAK1B,uBAAuByB,OAAOE,QACxHmE,GAAQ,IAERC,EAAO,IAAIkB,MAAM,uCA9SjC,K,SEPeQ,E,4MAzBLC,mB,yDACR,WACE,IACM5H,EAD6BmB,SAAS0G,eAAe,UACTC,WAAW,MAC7D5G,KAAK0G,cAAgB,IAAI7H,EAAaC,EAAS,CAC7Cc,QAAS,CACPC,KAAM,UACNC,KAAM,aAGVE,KAAK0G,cAAcG,W,oBAErB,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKC,GAAG,mBAAR,SACE,wBAAQA,GAAG,SAASrG,MAAM,MAAMC,OAAO,kB,GAlBjCqG,IAAMC,WCUTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5H,SAAS0G,eAAe,SAM1BO,M","file":"static/js/main.8b214ff7.chunk.js","sourcesContent":["import * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\r\nimport { MediaPipeFaceMesh } from '@tensorflow-models/face-landmarks-detection/dist/types';\r\nimport * as tf from '@tensorflow/tfjs-core';\r\n// If you are using the WebGL backend:\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport '@tensorflow/tfjs-backend-cpu';\r\nimport {TRIANGULATION} from './common/triangulation';\r\n\r\nexport interface ICallbacks {\r\n    found?: Function;\r\n    error?: Function;\r\n}\r\nenum Eevents {\r\n    found,\r\n    error\r\n}\r\nexport type events = keyof typeof Eevents;\r\n\r\nexport interface IPalette {\r\n    FACE : string;\r\n    IRIS : string;\r\n}\r\nexport interface IConfig {\r\n    NUM_KEYPOINTS      : number;\r\n    NUM_IRIS_KEYPOINTS : number;\r\n    palette            : IPalette;\r\n}\r\nexport interface Config {\r\n    NUM_KEYPOINTS?      : number;\r\n    NUM_IRIS_KEYPOINTS? : number;\r\n    palette?            : IPalette;\r\n}\r\n\r\ninterface IMetaData {\r\n    cover_ratio : number;\r\n    top_left    : {x: number, y: number};\r\n}\r\nexport class FaceDetector {\r\n    private _output_render_context : CanvasRenderingContext2D;\r\n    private _video : HTMLVideoElement;\r\n    private _stream : MediaStream = new MediaStream();\r\n    private _is_scanning : boolean = false;\r\n    private _anim_id : number = 0;\r\n    protected _callbacks : ICallbacks = {};\r\n    private model : MediaPipeFaceMesh | undefined;\r\n    private _interval_id : number = 0;\r\n    private keypoints : number[][];\r\n    private config : IConfig = {\r\n        NUM_KEYPOINTS: 468,\r\n        NUM_IRIS_KEYPOINTS: 5,\r\n        palette: {\r\n            FACE: '#32EEDB',\r\n            IRIS: '#FF2C35'\r\n        }\r\n    };\r\n    private _image_metadata : IMetaData;\r\n    constructor(context : CanvasRenderingContext2D, config? : Config) {\r\n        this._output_render_context = context;\r\n        this._video = document.createElement('video') as HTMLVideoElement;\r\n        if (config) {\r\n            this.config = {\r\n                ...this.config,\r\n                ...config\r\n            }\r\n        }\r\n\r\n        this.keypoints = [[0]];\r\n\r\n        this._image_metadata = {\r\n            cover_ratio: 0,\r\n            top_left: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        }\r\n        //clear canvas to black\r\n        this._output_render_context.fillStyle = \"black\";\r\n        this._output_render_context.fillRect(0, 0, this._output_render_context.canvas.width, this._output_render_context.canvas.height);\r\n    }\r\n\r\n    private distance(a : number[], b : number[]) {\r\n        return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));\r\n      }\r\n      \r\n    private drawPath(points : number[][], closePath : boolean) {\r\n        const region : Path2D = new Path2D();\r\n        region.moveTo(\r\n            (points[0][0] * this._image_metadata.cover_ratio) + this._image_metadata.top_left.x,\r\n            (points[0][1] - this._image_metadata.top_left.y) * this._image_metadata.cover_ratio\r\n        );\r\n        for (let i = 1; i < points.length; i++) {\r\n            const point = points[i];\r\n            region.lineTo(\r\n                (point[0] * this._image_metadata.cover_ratio) + this._image_metadata.top_left.x,\r\n                (point[1]- this._image_metadata.top_left.y) * this._image_metadata.cover_ratio);\r\n        }\r\n        \r\n        if (closePath) {\r\n            region.closePath();\r\n        }\r\n        this._output_render_context.stroke(region);\r\n    }\r\n\r\n    private async _read() {\r\n        // Pass in a video stream (or an image, canvas, or 3D tensor) to obtain an\r\n        // array of detected faces from the MediaPipe graph. If passing in a video\r\n        // stream, a single prediction per frame will be returned.\r\n        const predictions = await this.model?.estimateFaces({\r\n            input: this._video,\r\n            returnTensors: false,\r\n            flipHorizontal: false,\r\n            predictIrises: true\r\n        });\r\n\r\n        //render face triangle mesh\r\n        if (predictions && predictions.length > 0) {\r\n            this.keypoints = predictions[0].scaledMesh as unknown as number[][];\r\n        }\r\n\r\n        if (this._is_scanning) {\r\n            this._interval_id = window.setTimeout(this._read.bind(this), 41);\r\n        } else {\r\n            clearTimeout(this._interval_id);\r\n        }\r\n    }\r\n\r\n    private async _render() {\r\n        //scale to cover\r\n        let original_ratios = {\r\n            width: this._output_render_context.canvas.width / this._video.videoWidth,\r\n            height: this._output_render_context.canvas.height / this._video.videoHeight\r\n        };\r\n        \r\n        // formula for cover:\r\n        let cover_ratio = Math.max(original_ratios.width, original_ratios.height); \r\n        \r\n        // result:\r\n        let new_image_width = this._video.videoWidth * cover_ratio;\r\n        let new_image_height = this._video.videoHeight * cover_ratio;\r\n\r\n        // // get the top left position of the image\r\n        let x = (this._output_render_context.canvas.width / 2) - (this._video.videoWidth / 2) * cover_ratio;\r\n        let y = (this._output_render_context.canvas.height / 2) - (this._video.videoHeight / 2) * cover_ratio;\r\n\r\n        this._image_metadata = {\r\n            cover_ratio: cover_ratio,\r\n            top_left: {\r\n                x: x,\r\n                y: y\r\n            }\r\n        }\r\n\r\n        //draw to canvas\r\n        this._output_render_context.drawImage(this._video, x, y, new_image_width, new_image_height);\r\n        \r\n        this._output_render_context.strokeStyle = this.config.palette.FACE;\r\n        this._output_render_context.lineWidth = 0.5;\r\n        \r\n        if (this.keypoints.length > 1) {\r\n            //face\r\n            for (let i = 0; i < TRIANGULATION.length / 3; i++) {\r\n                const points = [\r\n                    TRIANGULATION[i * 3], TRIANGULATION[i * 3 + 1],\r\n                    TRIANGULATION[i * 3 + 2]\r\n                ].map(index => this.keypoints[index]);\r\n                this.drawPath(points, true);\r\n            }\r\n\r\n            //iris\r\n            if(this.keypoints.length > this.config.NUM_KEYPOINTS) {\r\n                this._output_render_context.strokeStyle = this.config.palette.IRIS;\r\n                this._output_render_context.lineWidth = 1;\r\n        \r\n                const leftCenter = this.keypoints[this.config.NUM_KEYPOINTS];\r\n                const leftDiameterY = this.distance(\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + 4],\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + 2]);\r\n                const leftDiameterX = this.distance(\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + 3],\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + 1]);\r\n        \r\n                this._output_render_context.beginPath();\r\n                this._output_render_context.ellipse(\r\n                    (leftCenter[0] * this._image_metadata.cover_ratio) + this._image_metadata.top_left.x,\r\n                    (leftCenter[1] - this._image_metadata.top_left.y) * this._image_metadata.cover_ratio,\r\n                    leftDiameterX / 2, leftDiameterY / 2, 0, 0, 2 * Math.PI\r\n                );\r\n                this._output_render_context.stroke();\r\n        \r\n                if(this.keypoints.length > this.config.NUM_KEYPOINTS + this.config.NUM_IRIS_KEYPOINTS) {\r\n                    const rightCenter = this.keypoints[this.config.NUM_KEYPOINTS + this.config.NUM_IRIS_KEYPOINTS];\r\n                    const rightDiameterY = this.distance(\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + this.config.NUM_IRIS_KEYPOINTS + 2],\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + this.config.NUM_IRIS_KEYPOINTS + 4]);\r\n                    const rightDiameterX = this.distance(\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + this.config.NUM_IRIS_KEYPOINTS + 3],\r\n                    this.keypoints[this.config.NUM_KEYPOINTS + this.config.NUM_IRIS_KEYPOINTS + 1]);\r\n        \r\n                    this._output_render_context.beginPath();\r\n                    this._output_render_context.ellipse(\r\n                        (rightCenter[0] * this._image_metadata.cover_ratio) + this._image_metadata.top_left.x,\r\n                        (rightCenter[1] - this._image_metadata.top_left.y) * this._image_metadata.cover_ratio, rightDiameterX / 2,\r\n                        rightDiameterY / 2, 0, 0, 2 * Math.PI\r\n                    );\r\n                    this._output_render_context.stroke();\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (this._is_scanning) {\r\n            this._anim_id = window.requestAnimationFrame(this._render.bind(this));\r\n        } else {\r\n            window.cancelAnimationFrame(this._anim_id);\r\n        }\r\n        \r\n    }\r\n\r\n    public print(text : string, x : number, y : number, lineHeight : number) {\r\n        const maxWidth : number = this._output_render_context.canvas.getBoundingClientRect().width;\r\n        let words : string[] = text.split(' ');\r\n        let line : string = '';\r\n\r\n        //write error message to canvas\r\n        this._output_render_context.font = \"20px Arial\";\r\n        this._output_render_context.fillStyle = \"white\";\r\n        this._output_render_context.textAlign = \"center\";\r\n\r\n        for(let n = 0; n < words.length; n++) {\r\n          let testLine : string = line + words[n] + ' ';\r\n          let metrics : TextMetrics = this._output_render_context.measureText(testLine);\r\n          let testWidth : number = metrics.width;\r\n          if (testWidth > maxWidth && n > 0) {\r\n            this._output_render_context.fillText(line, x, y);\r\n            line = words[n] + ' ';\r\n            y += lineHeight;\r\n          }\r\n          else {\r\n            line = testLine;\r\n          }\r\n        }\r\n        this._output_render_context.fillText(line, x, y);\r\n    }\r\n\r\n    public detect() : Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n                try {\r\n                    if (!this._is_scanning) {\r\n                        this._stream = await navigator.mediaDevices.getUserMedia({\r\n                            video: {\r\n                                width: {\r\n                                    ideal: this._output_render_context.canvas.width\r\n                                }, \r\n                                height: {\r\n                                    ideal: this._output_render_context.canvas.height\r\n                                },\r\n                                facingMode: 'user',\r\n                                frameRate: {\r\n                                    ideal: 24\r\n                                }\r\n                            }\r\n                        });\r\n                      \r\n                        this._video.srcObject = this._stream;\r\n                        this._video?.play();\r\n                        \r\n                        this._is_scanning = true;\r\n\r\n                        this._render();\r\n                        \r\n\r\n                        await tf.setBackend(\"webgl\");\r\n                        // Load the MediaPipe Facemesh package.\r\n                        this.model = await faceLandmarksDetection.load(\r\n                            faceLandmarksDetection.SupportedPackages.mediapipeFacemesh,\r\n                            {\r\n                                shouldLoadIrisModel: true,\r\n                                detectionConfidence: 1,\r\n                                maxFaces: 1,\r\n                                iouThreshold: 0,\r\n                                // scoreThreshold: 1,\r\n                            }\r\n                        );\r\n                            \r\n                        this._read();\r\n\r\n                        resolve();\r\n    \r\n                    } else {\r\n                        const error : Error = new Error(\"Stream already initialised.\");\r\n                        if (this._callbacks.error) {\r\n                            this._callbacks.error(error);\r\n                        }\r\n\r\n                        reject(error);\r\n                    }\r\n                } catch(e) {\r\n                    if (this._callbacks.error) {\r\n                        this._callbacks.error(e);\r\n                    }\r\n\r\n                    \r\n                    this.print(\"Error. Permission denied. Please update browser permissions to access camera.\", this._output_render_context.canvas.width / 2, this._output_render_context.canvas.height / 2, 25);\r\n\r\n                    reject(e);\r\n                }\r\n            \r\n            } else {\r\n                const error : Error = new Error(\"Browser does not support getUserMedia.\");\r\n                if (this._callbacks.error) {\r\n                    this._callbacks.error(error);\r\n                }\r\n\r\n                //write error message to canvas\r\n                this.print(\"Error. Your browser does not support camera access. Use a modern browser or update your browser.\", this._output_render_context.canvas.width / 2, this._output_render_context.canvas.height / 2, 25);\r\n\r\n                reject(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    public stop() : Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            if (this._stream) {\r\n                //stop scanning\r\n                this._is_scanning = false;\r\n                //stop camera\r\n                this._video.pause();\r\n                this._video.src = \"\";\r\n                this._stream.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n    \r\n                //clear canvas to black\r\n                this._output_render_context.fillStyle = \"black\";\r\n                this._output_render_context.fillRect(0, 0, this._output_render_context.canvas.width, this._output_render_context.canvas.height);\r\n                resolve(true);\r\n            } else {\r\n                reject(new Error(\"Stream was not initialised.\"));\r\n            }\r\n        })\r\n    }\r\n}","/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nexport const TRIANGULATION = [\r\n    127, 34, 139, 11, 0, 37, 232, 231, 120, 72, 37, 39, 128, 121, 47, 232, 121,\r\n    128, 104, 69, 67, 175, 171, 148, 157, 154, 155, 118, 50, 101, 73, 39, 40, 9,\r\n    151, 108, 48, 115, 131, 194, 204, 211, 74, 40, 185, 80, 42, 183, 40, 92,\r\n    186, 230, 229, 118, 202, 212, 214, 83, 18, 17, 76, 61, 146, 160, 29, 30, 56,\r\n    157, 173, 106, 204, 194, 135, 214, 192, 203, 165, 98, 21, 71, 68, 51, 45, 4,\r\n    144, 24, 23, 77, 146, 91, 205, 50, 187, 201, 200, 18, 91, 106, 182, 90, 91,\r\n    181, 85, 84, 17, 206, 203, 36, 148, 171, 140, 92, 40, 39, 193, 189, 244,\r\n    159, 158, 28, 247, 246, 161, 236, 3, 196, 54, 68, 104, 193, 168, 8, 117,\r\n    228, 31, 189, 193, 55, 98, 97, 99, 126, 47, 100, 166, 79, 218, 155, 154, 26,\r\n    209, 49, 131, 135, 136, 150, 47, 126, 217, 223, 52, 53, 45, 51, 134, 211,\r\n    170, 140, 67, 69, 108, 43, 106, 91, 230, 119, 120, 226, 130, 247, 63, 53,\r\n    52, 238, 20, 242, 46, 70, 156, 78, 62, 96, 46, 53, 63, 143, 34, 227, 173,\r\n    155, 133, 123, 117, 111, 44, 125, 19, 236, 134, 51, 216, 206, 205, 154, 153,\r\n    22, 39, 37, 167, 200, 201, 208, 36, 142, 100, 57, 212, 202, 20, 60, 99, 28,\r\n    158, 157, 35, 226, 113, 160, 159, 27, 204, 202, 210, 113, 225, 46, 43, 202,\r\n    204, 62, 76, 77, 137, 123, 116, 41, 38, 72, 203, 129, 142, 64, 98, 240, 49,\r\n    102, 64, 41, 73, 74, 212, 216, 207, 42, 74, 184, 169, 170, 211, 170, 149,\r\n    176, 105, 66, 69, 122, 6, 168, 123, 147, 187, 96, 77, 90, 65, 55, 107, 89,\r\n    90, 180, 101, 100, 120, 63, 105, 104, 93, 137, 227, 15, 86, 85, 129, 102,\r\n    49, 14, 87, 86, 55, 8, 9, 100, 47, 121, 145, 23, 22, 88, 89, 179, 6, 122,\r\n    196, 88, 95, 96, 138, 172, 136, 215, 58, 172, 115, 48, 219, 42, 80, 81, 195,\r\n    3, 51, 43, 146, 61, 171, 175, 199, 81, 82, 38, 53, 46, 225, 144, 163, 110,\r\n    246, 33, 7, 52, 65, 66, 229, 228, 117, 34, 127, 234, 107, 108, 69, 109, 108,\r\n    151, 48, 64, 235, 62, 78, 191, 129, 209, 126, 111, 35, 143, 163, 161, 246,\r\n    117, 123, 50, 222, 65, 52, 19, 125, 141, 221, 55, 65, 3, 195, 197, 25, 7,\r\n    33, 220, 237, 44, 70, 71, 139, 122, 193, 245, 247, 130, 33, 71, 21, 162,\r\n    153, 158, 159, 170, 169, 150, 188, 174, 196, 216, 186, 92, 144, 160, 161, 2,\r\n    97, 167, 141, 125, 241, 164, 167, 37, 72, 38, 12, 145, 159, 160, 38, 82, 13,\r\n    63, 68, 71, 226, 35, 111, 158, 153, 154, 101, 50, 205, 206, 92, 165, 209,\r\n    198, 217, 165, 167, 97, 220, 115, 218, 133, 112, 243, 239, 238, 241, 214,\r\n    135, 169, 190, 173, 133, 171, 208, 32, 125, 44, 237, 86, 87, 178, 85, 86,\r\n    179, 84, 85, 180, 83, 84, 181, 201, 83, 182, 137, 93, 132, 76, 62, 183, 61,\r\n    76, 184, 57, 61, 185, 212, 57, 186, 214, 207, 187, 34, 143, 156, 79, 239,\r\n    237, 123, 137, 177, 44, 1, 4, 201, 194, 32, 64, 102, 129, 213, 215, 138, 59,\r\n    166, 219, 242, 99, 97, 2, 94, 141, 75, 59, 235, 24, 110, 228, 25, 130, 226,\r\n    23, 24, 229, 22, 23, 230, 26, 22, 231, 112, 26, 232, 189, 190, 243, 221, 56,\r\n    190, 28, 56, 221, 27, 28, 222, 29, 27, 223, 30, 29, 224, 247, 30, 225, 238,\r\n    79, 20, 166, 59, 75, 60, 75, 240, 147, 177, 215, 20, 79, 166, 187, 147, 213,\r\n    112, 233, 244, 233, 128, 245, 128, 114, 188, 114, 217, 174, 131, 115, 220,\r\n    217, 198, 236, 198, 131, 134, 177, 132, 58, 143, 35, 124, 110, 163, 7, 228,\r\n    110, 25, 356, 389, 368, 11, 302, 267, 452, 350, 349, 302, 303, 269, 357,\r\n    343, 277, 452, 453, 357, 333, 332, 297, 175, 152, 377, 384, 398, 382, 347,\r\n    348, 330, 303, 304, 270, 9, 336, 337, 278, 279, 360, 418, 262, 431, 304,\r\n    408, 409, 310, 415, 407, 270, 409, 410, 450, 348, 347, 422, 430, 434, 313,\r\n    314, 17, 306, 307, 375, 387, 388, 260, 286, 414, 398, 335, 406, 418, 364,\r\n    367, 416, 423, 358, 327, 251, 284, 298, 281, 5, 4, 373, 374, 253, 307, 320,\r\n    321, 425, 427, 411, 421, 313, 18, 321, 405, 406, 320, 404, 405, 315, 16, 17,\r\n    426, 425, 266, 377, 400, 369, 322, 391, 269, 417, 465, 464, 386, 257, 258,\r\n    466, 260, 388, 456, 399, 419, 284, 332, 333, 417, 285, 8, 346, 340, 261,\r\n    413, 441, 285, 327, 460, 328, 355, 371, 329, 392, 439, 438, 382, 341, 256,\r\n    429, 420, 360, 364, 394, 379, 277, 343, 437, 443, 444, 283, 275, 440, 363,\r\n    431, 262, 369, 297, 338, 337, 273, 375, 321, 450, 451, 349, 446, 342, 467,\r\n    293, 334, 282, 458, 461, 462, 276, 353, 383, 308, 324, 325, 276, 300, 293,\r\n    372, 345, 447, 382, 398, 362, 352, 345, 340, 274, 1, 19, 456, 248, 281, 436,\r\n    427, 425, 381, 256, 252, 269, 391, 393, 200, 199, 428, 266, 330, 329, 287,\r\n    273, 422, 250, 462, 328, 258, 286, 384, 265, 353, 342, 387, 259, 257, 424,\r\n    431, 430, 342, 353, 276, 273, 335, 424, 292, 325, 307, 366, 447, 345, 271,\r\n    303, 302, 423, 266, 371, 294, 455, 460, 279, 278, 294, 271, 272, 304, 432,\r\n    434, 427, 272, 407, 408, 394, 430, 431, 395, 369, 400, 334, 333, 299, 351,\r\n    417, 168, 352, 280, 411, 325, 319, 320, 295, 296, 336, 319, 403, 404, 330,\r\n    348, 349, 293, 298, 333, 323, 454, 447, 15, 16, 315, 358, 429, 279, 14, 15,\r\n    316, 285, 336, 9, 329, 349, 350, 374, 380, 252, 318, 402, 403, 6, 197, 419,\r\n    318, 319, 325, 367, 364, 365, 435, 367, 397, 344, 438, 439, 272, 271, 311,\r\n    195, 5, 281, 273, 287, 291, 396, 428, 199, 311, 271, 268, 283, 444, 445,\r\n    373, 254, 339, 263, 466, 249, 282, 334, 296, 449, 347, 346, 264, 447, 454,\r\n    336, 296, 299, 338, 10, 151, 278, 439, 455, 292, 407, 415, 358, 371, 355,\r\n    340, 345, 372, 390, 249, 466, 346, 347, 280, 442, 443, 282, 19, 94, 370,\r\n    441, 442, 295, 248, 419, 197, 263, 255, 359, 440, 275, 274, 300, 383, 368,\r\n    351, 412, 465, 263, 467, 466, 301, 368, 389, 380, 374, 386, 395, 378, 379,\r\n    412, 351, 419, 436, 426, 322, 373, 390, 388, 2, 164, 393, 370, 462, 461,\r\n    164, 0, 267, 302, 11, 12, 374, 373, 387, 268, 12, 13, 293, 300, 301, 446,\r\n    261, 340, 385, 384, 381, 330, 266, 425, 426, 423, 391, 429, 355, 437, 391,\r\n    327, 326, 440, 457, 438, 341, 382, 362, 459, 457, 461, 434, 430, 394, 414,\r\n    463, 362, 396, 369, 262, 354, 461, 457, 316, 403, 402, 315, 404, 403, 314,\r\n    405, 404, 313, 406, 405, 421, 418, 406, 366, 401, 361, 306, 408, 407, 291,\r\n    409, 408, 287, 410, 409, 432, 436, 410, 434, 416, 411, 264, 368, 383, 309,\r\n    438, 457, 352, 376, 401, 274, 275, 4, 421, 428, 262, 294, 327, 358, 433,\r\n    416, 367, 289, 455, 439, 462, 370, 326, 2, 326, 370, 305, 460, 455, 254,\r\n    449, 448, 255, 261, 446, 253, 450, 449, 252, 451, 450, 256, 452, 451, 341,\r\n    453, 452, 413, 464, 463, 441, 413, 414, 258, 442, 441, 257, 443, 442, 259,\r\n    444, 443, 260, 445, 444, 467, 342, 445, 459, 458, 250, 289, 392, 290, 290,\r\n    328, 460, 376, 433, 435, 250, 290, 392, 411, 416, 433, 341, 463, 464, 453,\r\n    464, 465, 357, 465, 412, 343, 412, 399, 360, 363, 440, 437, 399, 456, 420,\r\n    456, 363, 401, 435, 288, 372, 383, 353, 339, 255, 249, 448, 261, 255, 133,\r\n    243, 190, 133, 155, 112, 33, 246, 247, 33, 130, 25, 398, 384, 286, 362, 398,\r\n    414, 362, 463, 341, 263, 359, 467, 263, 249, 255, 466, 467, 260, 75, 60,\r\n    166, 238, 239, 79, 162, 127, 139, 72, 11, 37, 121, 232, 120, 73, 72, 39,\r\n    114, 128, 47, 233, 232, 128, 103, 104, 67, 152, 175, 148, 173, 157, 155,\r\n    119, 118, 101, 74, 73, 40, 107, 9, 108, 49, 48, 131, 32, 194, 211, 184, 74,\r\n    185, 191, 80, 183, 185, 40, 186, 119, 230, 118, 210, 202, 214, 84, 83, 17,\r\n    77, 76, 146, 161, 160, 30, 190, 56, 173, 182, 106, 194, 138, 135, 192, 129,\r\n    203, 98, 54, 21, 68, 5, 51, 4, 145, 144, 23, 90, 77, 91, 207, 205, 187, 83,\r\n    201, 18, 181, 91, 182, 180, 90, 181, 16, 85, 17, 205, 206, 36, 176, 148,\r\n    140, 165, 92, 39, 245, 193, 244, 27, 159, 28, 30, 247, 161, 174, 236, 196,\r\n    103, 54, 104, 55, 193, 8, 111, 117, 31, 221, 189, 55, 240, 98, 99, 142, 126,\r\n    100, 219, 166, 218, 112, 155, 26, 198, 209, 131, 169, 135, 150, 114, 47,\r\n    217, 224, 223, 53, 220, 45, 134, 32, 211, 140, 109, 67, 108, 146, 43, 91,\r\n    231, 230, 120, 113, 226, 247, 105, 63, 52, 241, 238, 242, 124, 46, 156, 95,\r\n    78, 96, 70, 46, 63, 116, 143, 227, 116, 123, 111, 1, 44, 19, 3, 236, 51,\r\n    207, 216, 205, 26, 154, 22, 165, 39, 167, 199, 200, 208, 101, 36, 100, 43,\r\n    57, 202, 242, 20, 99, 56, 28, 157, 124, 35, 113, 29, 160, 27, 211, 204, 210,\r\n    124, 113, 46, 106, 43, 204, 96, 62, 77, 227, 137, 116, 73, 41, 72, 36, 203,\r\n    142, 235, 64, 240, 48, 49, 64, 42, 41, 74, 214, 212, 207, 183, 42, 184, 210,\r\n    169, 211, 140, 170, 176, 104, 105, 69, 193, 122, 168, 50, 123, 187, 89, 96,\r\n    90, 66, 65, 107, 179, 89, 180, 119, 101, 120, 68, 63, 104, 234, 93, 227, 16,\r\n    15, 85, 209, 129, 49, 15, 14, 86, 107, 55, 9, 120, 100, 121, 153, 145, 22,\r\n    178, 88, 179, 197, 6, 196, 89, 88, 96, 135, 138, 136, 138, 215, 172, 218,\r\n    115, 219, 41, 42, 81, 5, 195, 51, 57, 43, 61, 208, 171, 199, 41, 81, 38,\r\n    224, 53, 225, 24, 144, 110, 105, 52, 66, 118, 229, 117, 227, 34, 234, 66,\r\n    107, 69, 10, 109, 151, 219, 48, 235, 183, 62, 191, 142, 129, 126, 116, 111,\r\n    143, 7, 163, 246, 118, 117, 50, 223, 222, 52, 94, 19, 141, 222, 221, 65,\r\n    196, 3, 197, 45, 220, 44, 156, 70, 139, 188, 122, 245, 139, 71, 162, 145,\r\n    153, 159, 149, 170, 150, 122, 188, 196, 206, 216, 92, 163, 144, 161, 164, 2,\r\n    167, 242, 141, 241, 0, 164, 37, 11, 72, 12, 144, 145, 160, 12, 38, 13, 70,\r\n    63, 71, 31, 226, 111, 157, 158, 154, 36, 101, 205, 203, 206, 165, 126, 209,\r\n    217, 98, 165, 97, 237, 220, 218, 237, 239, 241, 210, 214, 169, 140, 171, 32,\r\n    241, 125, 237, 179, 86, 178, 180, 85, 179, 181, 84, 180, 182, 83, 181, 194,\r\n    201, 182, 177, 137, 132, 184, 76, 183, 185, 61, 184, 186, 57, 185, 216, 212,\r\n    186, 192, 214, 187, 139, 34, 156, 218, 79, 237, 147, 123, 177, 45, 44, 4,\r\n    208, 201, 32, 98, 64, 129, 192, 213, 138, 235, 59, 219, 141, 242, 97, 97, 2,\r\n    141, 240, 75, 235, 229, 24, 228, 31, 25, 226, 230, 23, 229, 231, 22, 230,\r\n    232, 26, 231, 233, 112, 232, 244, 189, 243, 189, 221, 190, 222, 28, 221,\r\n    223, 27, 222, 224, 29, 223, 225, 30, 224, 113, 247, 225, 99, 60, 240, 213,\r\n    147, 215, 60, 20, 166, 192, 187, 213, 243, 112, 244, 244, 233, 245, 245,\r\n    128, 188, 188, 114, 174, 134, 131, 220, 174, 217, 236, 236, 198, 134, 215,\r\n    177, 58, 156, 143, 124, 25, 110, 7, 31, 228, 25, 264, 356, 368, 0, 11, 267,\r\n    451, 452, 349, 267, 302, 269, 350, 357, 277, 350, 452, 357, 299, 333, 297,\r\n    396, 175, 377, 381, 384, 382, 280, 347, 330, 269, 303, 270, 151, 9, 337,\r\n    344, 278, 360, 424, 418, 431, 270, 304, 409, 272, 310, 407, 322, 270, 410,\r\n    449, 450, 347, 432, 422, 434, 18, 313, 17, 291, 306, 375, 259, 387, 260,\r\n    424, 335, 418, 434, 364, 416, 391, 423, 327, 301, 251, 298, 275, 281, 4,\r\n    254, 373, 253, 375, 307, 321, 280, 425, 411, 200, 421, 18, 335, 321, 406,\r\n    321, 320, 405, 314, 315, 17, 423, 426, 266, 396, 377, 369, 270, 322, 269,\r\n    413, 417, 464, 385, 386, 258, 248, 456, 419, 298, 284, 333, 168, 417, 8,\r\n    448, 346, 261, 417, 413, 285, 326, 327, 328, 277, 355, 329, 309, 392, 438,\r\n    381, 382, 256, 279, 429, 360, 365, 364, 379, 355, 277, 437, 282, 443, 283,\r\n    281, 275, 363, 395, 431, 369, 299, 297, 337, 335, 273, 321, 348, 450, 349,\r\n    359, 446, 467, 283, 293, 282, 250, 458, 462, 300, 276, 383, 292, 308, 325,\r\n    283, 276, 293, 264, 372, 447, 346, 352, 340, 354, 274, 19, 363, 456, 281,\r\n    426, 436, 425, 380, 381, 252, 267, 269, 393, 421, 200, 428, 371, 266, 329,\r\n    432, 287, 422, 290, 250, 328, 385, 258, 384, 446, 265, 342, 386, 387, 257,\r\n    422, 424, 430, 445, 342, 276, 422, 273, 424, 306, 292, 307, 352, 366, 345,\r\n    268, 271, 302, 358, 423, 371, 327, 294, 460, 331, 279, 294, 303, 271, 304,\r\n    436, 432, 427, 304, 272, 408, 395, 394, 431, 378, 395, 400, 296, 334, 299,\r\n    6, 351, 168, 376, 352, 411, 307, 325, 320, 285, 295, 336, 320, 319, 404,\r\n    329, 330, 349, 334, 293, 333, 366, 323, 447, 316, 15, 315, 331, 358, 279,\r\n    317, 14, 316, 8, 285, 9, 277, 329, 350, 253, 374, 252, 319, 318, 403, 351,\r\n    6, 419, 324, 318, 325, 397, 367, 365, 288, 435, 397, 278, 344, 439, 310,\r\n    272, 311, 248, 195, 281, 375, 273, 291, 175, 396, 199, 312, 311, 268, 276,\r\n    283, 445, 390, 373, 339, 295, 282, 296, 448, 449, 346, 356, 264, 454, 337,\r\n    336, 299, 337, 338, 151, 294, 278, 455, 308, 292, 415, 429, 358, 355, 265,\r\n    340, 372, 388, 390, 466, 352, 346, 280, 295, 442, 282, 354, 19, 370, 285,\r\n    441, 295, 195, 248, 197, 457, 440, 274, 301, 300, 368, 417, 351, 465, 251,\r\n    301, 389, 385, 380, 386, 394, 395, 379, 399, 412, 419, 410, 436, 322, 387,\r\n    373, 388, 326, 2, 393, 354, 370, 461, 393, 164, 267, 268, 302, 12, 386, 374,\r\n    387, 312, 268, 13, 298, 293, 301, 265, 446, 340, 380, 385, 381, 280, 330,\r\n    425, 322, 426, 391, 420, 429, 437, 393, 391, 326, 344, 440, 438, 458, 459,\r\n    461, 364, 434, 394, 428, 396, 262, 274, 354, 457, 317, 316, 402, 316, 315,\r\n    403, 315, 314, 404, 314, 313, 405, 313, 421, 406, 323, 366, 361, 292, 306,\r\n    407, 306, 291, 408, 291, 287, 409, 287, 432, 410, 427, 434, 411, 372, 264,\r\n    383, 459, 309, 457, 366, 352, 401, 1, 274, 4, 418, 421, 262, 331, 294, 358,\r\n    435, 433, 367, 392, 289, 439, 328, 462, 326, 94, 2, 370, 289, 305, 455, 339,\r\n    254, 448, 359, 255, 446, 254, 253, 449, 253, 252, 450, 252, 256, 451, 256,\r\n    341, 452, 414, 413, 463, 286, 441, 414, 286, 258, 441, 258, 257, 442, 257,\r\n    259, 443, 259, 260, 444, 260, 467, 445, 309, 459, 250, 305, 289, 290, 305,\r\n    290, 460, 401, 376, 435, 309, 250, 392, 376, 411, 433, 453, 341, 464, 357,\r\n    453, 465, 343, 357, 412, 437, 343, 399, 344, 360, 440, 420, 437, 456, 360,\r\n    420, 363, 361, 401, 288, 265, 372, 353, 390, 339, 249, 339, 448, 255];","import React from 'react';\r\nimport './App.css';\r\nimport {FaceDetector} from './facial-recognition/index';\r\n\r\nclass App extends React.Component {\r\n  private face_detector : FaceDetector | undefined;\r\n  componentDidMount() {\r\n    const canvas : HTMLCanvasElement = document.getElementById('canvas') as HTMLCanvasElement;\r\n    const context : CanvasRenderingContext2D = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.face_detector = new FaceDetector(context, {\r\n      palette: {\r\n        FACE: '#5CB4F3',\r\n        IRIS: '#E8760C'\r\n      }\r\n    });\r\n    this.face_detector.detect();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <div id=\"canvas-container\">\r\n            <canvas id=\"canvas\" width=\"480\" height=\"852\" />\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}